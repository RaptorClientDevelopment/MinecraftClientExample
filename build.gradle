buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
        maven {
            name = 'SpongePowered'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:3.+"
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

configurations {
    shade
}

group = 'me.ritomg'
version = '1.0'
archivesBaseName = 'ClientBase'

minecraft {
    mappings channel: 'stable', version: '39-1.12'

    runs {
        client {
            workingDirectory project.file('run')

            property 'fml.coreMods.load', mixinCoreMod

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven {
        name = 'spongepowered-repo'
        url = 'https://repo.spongepowered.org/repository/maven-public/'
    }

    maven { url = 'https://lukflug.github.io/maven' }

    maven {
        name = 'jitpack.io'
        url = 'https://jitpack.io/'
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2854'

    // class patching
    shade('org.spongepowered:mixin:0.7.4-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }

    shade('com.lukflug:panelstudio:0.1.8')
    shade ('com.lukflug:panelstudio-mc12:0.1.8')

    annotationProcessor('org.spongepowered:mixin:0.8.2:processor') {
        exclude module: 'gson'
    }

    shade 'net.jodah:typetools:0.4.4'

    // discord rpc
    shade 'club.minnced:java-discord-rpc:2.0.1'



    compile configurations.shade
}


processResources {

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        include mixinRefmap
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

mixin {
    defaultObfuscationEnv 'searge'
    add sourceSets.main, mixinRefmap
}

jar {
    manifest {
        attributes(
                'MixinConfigs': mixinConfigs,
                'tweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                'TweakOrder': 0,
                'FMLCorePluginContainsFMLMod': 'true',
                'FMLCorePlugin': mixinCoreMod,
                'ForceLoadAsMod': 'true',
        )
    }
    configurations.shade.each { dep ->
        from(project.zipTree(dep)) {
            exclude 'META-INF', 'META-INF/**'
        }
    }
}